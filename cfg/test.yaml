mutation_rate: 0.5
num_generations: 200
population_size: 5
num_nodes: 20
fitness_threshold: 0.1
node_inputs: 2
save_best: False
mutate_method: :simple
add_mutate_length: 10
delete_mutate_length: 5
add_mutate_rate: 1.0
delete_mutate_rate: 0.0
neat_speciation_thresh: 0.02
neat_population: 20
neat_num_generations: 20
neat_init_species: 4
neat_crossover_rate: 0.25
neat_mutation_rate: 0.65
ga_population: 20
ga_num_generations: 20
ga_elitism_rate: 0.1
ga_crossover_rate: 0.25
ga_mutation_rate: 0.5
cmaes_population: 5
cmaes_stopeval: 1000
functions:
  f_sum:
    - (x+y)/2.0
    - (x.+y)/2.0
    - (x.+y)/2.0
    - .+(eqsize(x,y,c)...)/2.0
  f_aminus:
    - abs(x-y)/2.0
    - abs.(x.-y)/2.0
    - abs.(x.-y)/2.0
    - abs.(.-(eqsize(x,y,c)...))/2.0
  f_mult:
    - x*y
    - x.*y
    - x.*y
    - ".*(eqsize(x,y,c)...)"
  f_bdiv:
    - bdiv(x, y)
    - (i->bdiv(x,i)).(y)
    - (i->bdiv(i,y)).(x)
    - "[bdiv(eqsize(x,y,c)[1][i], eqsize(x,y,c)[2][i]) for i in eachindex(eqsize(x,y,c)[1])]"
  f_nans:
    - "scaled(NaN)"
    - "scaled([NaN, NaN, NaN])"
